@startuml Wrapper

entity "Main" {
    + load mesh source
    + load mesh target
    + load curves source
    + load curves target
}

class "Class Mesh" {
    - vector <vertex>
    - vector <faces>
    - vector <edge>
    - mesh
    - read_file()
    + validate_mesh()
    + triangluate_mesh()
    + Interleave_pos_and_colour()

}

class "Class Curve" {
    - curve
    - readCurveInput()
    - DiscretizeCurve()
    + projectPoints()
}

class "Class MeshUtility (singleton)" {
    - Compute_barycentricCoordinates()
    - Divide_mesh_for_baricentric()
    - wrap_patch_layout()
}

struct "Struct Vertex" {
    - Vec3
}

struct "Struct Edge" {
    - Vec2
}

struct "Struct Faces" {
    - Vec4
}

struct "Struct Output" {
    - write data to file()
}

' Relationships
"Main" --> "Class Mesh" 
"Main" --> "Class Curve"
"Class Curve" *-- "Class Mesh" : Composition
"Class MeshUtility (singleton)" *-- "Class Mesh" : Composition
"Class MeshUtility (singleton)" *-- "Struct Output" : Composition
"Class Mesh" --> "Struct Vertex"
"Class Mesh" --> "Struct Edge"
"Class Mesh" --> "Struct Faces"

@enduml
